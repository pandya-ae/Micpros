     1                                  %INCLUDE "winAPI.inc"		;;Declare external procedure {winapi}
     1                              <1> extern ExitProcess
     2                              <1> extern AllocConsole 
     3                              <1> extern FreeConsole 
     4                              <1> extern SetConsoleTitleA 
     5                              <1> extern Sleep 
     6                              <1> extern GetStdHandle
     7                              <1> extern ReadFile
     8                              <1> extern WriteFile
     9                              <1> EXTERN MessageBoxA	
    10                              <1> 
    11                              <1> import ExitProcess		kernel32.dll
    12                              <1> import AllocConsole		kernel32.dll 
    13                              <1> import FreeConsole		kernel32.dll 
    14                              <1> import SetConsoleTitleA	kernel32.dll 
    15                              <1> import Sleep 			kernel32.dll
    16                              <1> import GetStdHandle 	kernel32.dll
    17                              <1> import ReadFile			kernel32.dll
    18                              <1> import WriteFile		kernel32.dll
    19                              <1> IMPORT MessageBoxA 		user32.dll
     2                                  %INCLUDE "Console1.mac"		;;Macro definition
     1                              <1> %macro NewConsole 3
     2                              <1> 	
     3                              <1> 	call [AllocConsole] 
     4                              <1> 
     5                              <1> 	push dword %1 
     6                              <1> 	call [SetConsoleTitleA] 
     7                              <1> 
     8                              <1> 	push dword -11 				
     9                              <1> 	call [GetStdHandle] 
    10                              <1> 	mov dword [%2], eax 
    11                              <1> 
    12                              <1> 	push dword -10				 
    13                              <1> 	call [GetStdHandle] 
    14                              <1> 	mov dword [%3], eax 
    15                              <1> 
    16                              <1> %endmacro
    17                              <1> 
    18                              <1> %macro QuitConsole 0
    19                              <1> 	call [FreeConsole] 
    20                              <1> 	xor eax, eax 
    21                              <1> 	push eax 
    22                              <1> 	call [ExitProcess]
    23                              <1> %endmacro
    24                              <1> 
    25                              <1> %macro Wait 1
    26                              <1> 	push dword %1*1000 		;; delay %1/1000 second 
    27                              <1> 	call [Sleep] 
    28                              <1> %endmacro
    29                              <1> 
    30                              <1> %macro DisplayText 4
    31                              <1> 	push dword 0 				
    32                              <1> 	push dword %4				
    33                              <1> 	push dword [%3] 			
    34                              <1> 	push dword %2				
    35                              <1> 	push dword [%1] 			
    36                              <1> 	call [WriteFile] 
    37                              <1> %endmacro
    38                              <1> 
    39                              <1> %macro GetText 4
    40                              <1> 	push dword 0 		
    41                              <1> 	push dword %4 		
    42                              <1> 	push dword [%3] 	
    43                              <1> 	push dword %2 		
    44                              <1> 	push dword [%1] 	
    45                              <1> 	call [ReadFile] 			
    46                              <1> %endmacro
     3                                  
     4                                  SEGMENT .DATA use32
     5 00000000 48656C6C6F6F6F6F6F-     cTitle   	db "Hellooooo",0 
     5 00000009 00                 
     6                                  
     7 0000000A 0D0A0D0A594F555220-     msg1 		db 13,10,13,10,"YOUR NAME : ",0
     7 00000013 4E414D45203A2000   
     8 0000001B 11000000                msg1_len 	dd $-msg1
     9                                  
    10 0000001F 48656C6C6F2000          mbtitle 	db 'Hello ',0
    11 00000026 476F6F64204D6F726E-     mbtext		db 'Good Morning '
    11 0000002F 696E6720           
    12 00000033 <res 00000010>          buff		resb 16
    13 00000043 10000000                buff_len	dd 16
    14                                  
    15 00000047 202D2D20476F642042-     text2   	db ' -- God Bless You !!!',0
    15 00000050 6C65737320596F7520-
    15 00000059 21212100           
    16 0000005D 16000000                ptext2  	dd $-text2
    17                                  
    18                                  
    19                                  SEGMENT .BSS  use32
    20 00000000 <res 00000004>          hStdOut		resd 1 
    21 00000004 <res 00000004>          hStdIn		resd 1 
    22 00000008 <res 00000004>          nBytes		resd 1
    23 0000000C <res 00000004>          iBytes		resd 1
    24                                  
    25                                  SEGMENT .CODE use32
    26                                  ..start:
    27                                  NewConsole 	cTitle, hStdOut, hStdIn
    27                              <1> 
    27 00000000 FF15[00000000]      <1>  call [AllocConsole]
    27                              <1> 
    27 00000006 68[00000000]        <1>  push dword %1
    27 0000000B FF15[00000000]      <1>  call [SetConsoleTitleA]
    27                              <1> 
    27 00000011 6AF5                <1>  push dword -11
    27 00000013 FF15[00000000]      <1>  call [GetStdHandle]
    27 00000019 A3[00000000]        <1>  mov dword [%2], eax
    27                              <1> 
    27 0000001E 6AF6                <1>  push dword -10
    27 00000020 FF15[00000000]      <1>  call [GetStdHandle]
    27 00000026 A3[04000000]        <1>  mov dword [%3], eax
    27                              <1> 
    28                                  
    29                                  DisplayText	hStdOut, msg1, msg1_len, nBytes
    29 0000002B 6A00                <1>  push dword 0
    29 0000002D 68[08000000]        <1>  push dword %4
    29 00000032 FF35[1B000000]      <1>  push dword [%3]
    29 00000038 68[0A000000]        <1>  push dword %2
    29 0000003D FF35[00000000]      <1>  push dword [%1]
    29 00000043 FF15[00000000]      <1>  call [WriteFile]
    30                                  GetText		hStdIn, buff, buff_len, iBytes
    30 00000049 6A00                <1>  push dword 0
    30 0000004B 68[0C000000]        <1>  push dword %4
    30 00000050 FF35[43000000]      <1>  push dword [%3]
    30 00000056 68[33000000]        <1>  push dword %2
    30 0000005B FF35[04000000]      <1>  push dword [%1]
    30 00000061 FF15[00000000]      <1>  call [ReadFile]
    31                                  
    32 00000067 833D[0C000000]02        CMP dword [iBytes],2    ;; if just Enter (2 char) then Exit
    33 0000006E 7405                    JE  Exitloop
    34                                  
    35 00000070 E810000000              CALL mbox
    36                                  
    37                                  Exitloop: 
    38                                     QuitConsole
    38 00000075 FF15[00000000]      <1>  call [FreeConsole]
    38 0000007B 31C0                <1>  xor eax, eax
    38 0000007D 50                  <1>  push eax
    38 0000007E FF15[00000000]      <1>  call [ExitProcess]
    39                                  	
    40 00000084 C3                      RET
    41                                  
    42                                  ; Display on MessageBox 
    43                                  ;-------------------------------------------------------------------------------------
    44                                  mbox:
    45 00000085 BE[33000000]             mov esi, buff			; mbtext + buff + text2 (concatenate 3 string)
    46 0000008A 0335[0C000000]           add esi, [iBytes]
    47 00000090 83EE02                   sub esi,2
    48                                  
    49 00000093 B220                     mov dl,' '
    50 00000095 8816                     mov [esi], dl
    51 00000097 46                       inc esi
    52 00000098 8B0D[5D000000]           mov ecx, [ptext2]
    53 0000009E BB[47000000]             mov ebx, text2
    54                                   cptx:
    55 000000A3 8A13                    	mov dl, byte [ebx]
    56 000000A5 8816                    	mov [esi], dl
    57 000000A7 46                      	inc esi
    58 000000A8 43                      	inc ebx
    59 000000A9 E2F8                     loop cptx
    60                                   
    61 000000AB 6A30                     push dword 30h			; Button OK | icon exclamation
    62 000000AD 68[1F000000]             push dword mbtitle		
    63 000000B2 68[26000000]             push dword mbtext  	
    64 000000B7 6A00                     push dword 0			
    65                                  
    66 000000B9 FF15[00000000]           call [MessageBoxA]
    67                                  
    68 000000BF C3                      ret
    69                                  
